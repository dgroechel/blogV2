{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/Users/dgroechel/Desktop/nextjs/components/Drawer.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\nimport SwipeableDrawer from '@material-ui/core/SwipeableDrawer';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport { Typography } from '@material-ui/core';\nimport Link from '../src/Link';\nvar useStyles = makeStyles({\n  list: {\n    width: 250\n  },\n  fullList: {\n    width: 'auto'\n  },\n  font: {\n    fontFamily: 'Kalam'\n  },\n  hamburger: {\n    marginLeft: 'auto',\n    display: 'flex'\n  }\n});\nexport default function SwipeableTemporaryDrawer() {\n  _s();\n\n  var _this = this;\n\n  var classes = useStyles();\n\n  var _React$useState = React.useState({\n    right: false\n  }),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      state = _React$useState2[0],\n      setState = _React$useState2[1];\n\n  var toggleDrawer = function toggleDrawer(anchor, open) {\n    return function (event) {\n      if (event && event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\n        return;\n      }\n\n      setState(_objectSpread(_objectSpread({}, state), {}, _defineProperty({}, anchor, open)));\n    };\n  };\n\n  var list = function list(anchor) {\n    return __jsx(\"div\", {\n      className: clsx(classes.list, _defineProperty({}, classes.fullList, anchor === 'top' || anchor === 'bottom')),\n      role: \"presentation\",\n      onClick: toggleDrawer(anchor, false),\n      onKeyDown: toggleDrawer(anchor, false),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 5\n      }\n    }, __jsx(List, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 7\n      }\n    }, __jsx(ListItem, {\n      component: Link,\n      button: true,\n      href: \"/about\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }\n    }, __jsx(Typography, {\n      variant: \"h4\",\n      className: classes.font,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 15\n      }\n    }, \"About\")), __jsx(ListItem, {\n      component: Link,\n      button: true,\n      href: \"/\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }\n    }, __jsx(Typography, {\n      variant: \"h4\",\n      className: classes.font,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }\n    }, \"Blog\")), __jsx(ListItem, {\n      component: Link,\n      button: true,\n      href: \"/projects\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }\n    }, __jsx(Typography, {\n      variant: \"h4\",\n      className: classes.font,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }\n    }, \"Projects\"))));\n  };\n\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 5\n    }\n  }, ['right'].map(function (anchor) {\n    return __jsx(React.Fragment, {\n      key: anchor,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }\n    }, __jsx(\"div\", {\n      className: classes.hamburger,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }\n    }, __jsx(IconButton, {\n      \"aria-label\": \"menu\",\n      onClick: toggleDrawer(anchor, true),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 13\n      }\n    }, __jsx(MenuIcon, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 15\n      }\n    }))), __jsx(SwipeableDrawer, {\n      anchor: anchor,\n      open: state[anchor],\n      onClose: toggleDrawer(anchor, false),\n      onOpen: toggleDrawer(anchor, true),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }\n    }, list(anchor)));\n  }));\n}\n\n_s(SwipeableTemporaryDrawer, \"uTy8EQlIcsRdyD0oX481Py/w3j4=\", false, function () {\n  return [useStyles];\n});\n\n_c = SwipeableTemporaryDrawer;\n\nvar _c;\n\n$RefreshReg$(_c, \"SwipeableTemporaryDrawer\");","map":{"version":3,"sources":["/Users/dgroechel/Desktop/nextjs/components/Drawer.js"],"names":["React","clsx","makeStyles","SwipeableDrawer","List","ListItem","IconButton","MenuIcon","Typography","Link","useStyles","list","width","fullList","font","fontFamily","hamburger","marginLeft","display","SwipeableTemporaryDrawer","classes","useState","right","state","setState","toggleDrawer","anchor","open","event","type","key","map"],"mappings":"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","sourcesContent":["import React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\nimport SwipeableDrawer from '@material-ui/core/SwipeableDrawer';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport { Typography } from '@material-ui/core';\nimport Link from '../src/Link'\n\nconst useStyles = makeStyles({\n  list: {\n    width: 250,\n  },\n  fullList: {\n    width: 'auto',\n  },\n  font: {\n    fontFamily: 'Kalam'\n  },\n  hamburger: {\n    marginLeft: 'auto',\n    display: 'flex',\n  }\n});\n\nexport default function SwipeableTemporaryDrawer() {\n  const classes = useStyles();\n  const [state, setState] = React.useState({\n    right: false,\n  });\n\n  const toggleDrawer = (anchor, open) => (event) => {\n    if (event && event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\n      return;\n    }\n\n    setState({ ...state, [anchor]: open });\n  };\n\n  const list = (anchor) => (\n    <div\n      className={clsx(classes.list, {\n        [classes.fullList]: anchor === 'top' || anchor === 'bottom',\n      })}\n      role=\"presentation\"\n      onClick={toggleDrawer(anchor, false)}\n      onKeyDown={toggleDrawer(anchor, false)}\n    >\n      <List>\n          <ListItem component={Link} button href=\"/about\">\n              <Typography variant=\"h4\" className={classes.font}>\n                  About\n              </Typography>\n          </ListItem>\n          <ListItem component={Link} button href=\"/\">\n          <Typography variant=\"h4\" className={classes.font}>\n                  Blog\n              </Typography>\n          </ListItem>\n          <ListItem component={Link} button href=\"/projects\">\n          <Typography variant=\"h4\" className={classes.font}>\n                  Projects\n              </Typography>\n          </ListItem>\n       </List>\n    </div>\n  );\n\n  return (\n    <div>\n      {['right'].map((anchor) => (\n        <React.Fragment key={anchor}>\n          <div className={classes.hamburger}>\n            <IconButton\n              \n              aria-label=\"menu\"\n              onClick={toggleDrawer(anchor, true)}\n            >\n              <MenuIcon />\n            </IconButton>\n          </div>\n         {/*  <Button onClick={toggleDrawer(anchor, true)}>{anchor}</Button> */}\n          <SwipeableDrawer\n            anchor={anchor}\n            open={state[anchor]}\n            onClose={toggleDrawer(anchor, false)}\n            onOpen={toggleDrawer(anchor, true)}\n          >\n            {list(anchor)}\n          </SwipeableDrawer>\n        </React.Fragment>\n      ))}\n    </div>\n  );\n}"]},"metadata":{},"sourceType":"module"}