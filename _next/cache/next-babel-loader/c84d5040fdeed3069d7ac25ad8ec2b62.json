{"ast":null,"code":"var _jsxFileName = \"/Users/dgroechel/Desktop/nextjs/pages/blog/[slug].js\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from \"react\";\nimport Navbar from \"../../components/Navbar\";\nimport { Container, Divider } from \"@material-ui/core\";\nimport Copyright from \"../../src/Copyright\";\nimport SubscribeForm from \"../../components/SubscribeForm\";\nimport Head from 'next/head';\n\nfunction BlogPostPage(props) {\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 5\n    }\n  }, __jsx(Head, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }\n  }, __jsx(\"title\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 8\n    }\n  }, \"Blog | \", props.blog.title), __jsx(\"meta\", {\n    property: \"og:url\",\n    content: \"https://www.dgroechel.com\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 8\n    }\n  }), __jsx(\"meta\", {\n    property: \"og:type\",\n    content: \"article\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 8\n    }\n  }), __jsx(\"meta\", {\n    property: \"og:title\",\n    content: \"David Groechel\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 8\n    }\n  }), __jsx(\"meta\", {\n    property: \"og:description\",\n    content: props.blog.description,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 8\n    }\n  }), __jsx(\"meta\", {\n    property: \"og:image\",\n    content: props.blog.image,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 8\n    }\n  }), __jsx(\"link\", {\n    rel: \"shortcut icon\",\n    href: \"/DG.ico\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 8\n    }\n  })), __jsx(Container, {\n    maxWidth: \"md\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }\n  }, __jsx(Navbar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }\n  }), __jsx(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }\n  }, props.blog.title), __jsx(\"section\", {\n    dangerouslySetInnerHTML: {\n      __html: props.blog.content\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }\n  }), __jsx(Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }\n  }), __jsx(SubscribeForm, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }\n  }), __jsx(Copyright, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }\n  })));\n} // pass props to BlogPostPage component\n\n\nexport async function getStaticProps(context) {\n  const fs = require(\"fs\");\n\n  const html = require(\"remark-html\");\n\n  const highlight = require(\"remark-highlight.js\");\n\n  const unified = require(\"unified\");\n\n  const markdown = require(\"remark-parse\");\n\n  const matter = require(\"gray-matter\");\n\n  const slug = context.params.slug; // get slug from params\n\n  const path = `${process.cwd()}/posts/${slug}.md`; // read file content and store into rawContent variable\n\n  const rawContent = fs.readFileSync(path, {\n    encoding: \"utf-8\"\n  });\n  const {\n    data,\n    content\n  } = matter(rawContent); // pass rawContent to gray-matter to get data and content\n\n  const result = await unified().use(markdown).use(highlight) // highlight code block\n  .use(html).process(content); // pass content to process\n\n  return {\n    props: {\n      blog: _objectSpread(_objectSpread({}, data), {}, {\n        content: result.toString()\n      })\n    }\n  };\n} // generate HTML paths at build time\n\nexport async function getStaticPaths(context) {\n  const fs = require(\"fs\");\n\n  const path = `${process.cwd()}/posts`;\n  const files = fs.readdirSync(path, \"utf-8\");\n  const markdownFileNames = files.filter(fn => fn.endsWith(\".md\")).map(fn => fn.replace(\".md\", \"\"));\n  return {\n    paths: markdownFileNames.map(fileName => {\n      return {\n        params: {\n          slug: fileName\n        }\n      };\n    }),\n    fallback: false\n  };\n}\nexport default BlogPostPage;","map":{"version":3,"sources":["/Users/dgroechel/Desktop/nextjs/pages/blog/[slug].js"],"names":["React","Navbar","Container","Divider","Copyright","SubscribeForm","Head","BlogPostPage","props","blog","title","description","image","__html","content","getStaticProps","context","fs","require","html","highlight","unified","markdown","matter","slug","params","path","process","cwd","rawContent","readFileSync","encoding","data","result","use","toString","getStaticPaths","files","readdirSync","markdownFileNames","filter","fn","endsWith","map","replace","paths","fileName","fallback"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport Navbar from \"../../components/Navbar\";\nimport { Container, Divider } from \"@material-ui/core\";\nimport Copyright from \"../../src/Copyright\";\nimport SubscribeForm from \"../../components/SubscribeForm\";\nimport Head from 'next/head'\n\nfunction BlogPostPage(props) {\n  return (\n    <div>\n      <Head>\n       <title>Blog | {props.blog.title}</title> \n       <meta property=\"og:url\" content=\"https://www.dgroechel.com\" />\n       <meta property=\"og:type\" content=\"article\" />\n       <meta property=\"og:title\" content=\"David Groechel\" />\n       <meta property=\"og:description\" content={props.blog.description} />\n       <meta property=\"og:image\" content={props.blog.image} />\n       <link rel=\"shortcut icon\" href=\"/DG.ico\" />\n      </Head>\n      <Container maxWidth=\"md\">\n      <Navbar />\n      <h1>{props.blog.title}</h1>\n      <section\n        dangerouslySetInnerHTML={{ __html: props.blog.content }}\n      ></section>\n      <Divider />\n      <SubscribeForm />\n      <Copyright/>\n      </Container>\n    </div>\n  );\n}\n\n// pass props to BlogPostPage component\nexport async function getStaticProps(context) {\n  const fs = require(\"fs\");\n  const html = require(\"remark-html\");\n  const highlight = require(\"remark-highlight.js\");\n  const unified = require(\"unified\");\n  const markdown = require(\"remark-parse\");\n  const matter = require(\"gray-matter\");\n\n  const slug = context.params.slug; // get slug from params\n  const path = `${process.cwd()}/posts/${slug}.md`;\n\n  // read file content and store into rawContent variable\n  const rawContent = fs.readFileSync(path, {\n    encoding: \"utf-8\",\n  });\n\n  const { data, content } = matter(rawContent); // pass rawContent to gray-matter to get data and content\n\n  const result = await unified()\n    .use(markdown)\n    .use(highlight) // highlight code block\n    .use(html)\n    .process(content); // pass content to process\n\n  return {\n    props: {\n      blog: {\n        ...data,\n        content: result.toString(),\n      },\n    },\n  };\n}\n\n// generate HTML paths at build time\nexport async function getStaticPaths(context) {\n  const fs = require(\"fs\");\n\n  const path = `${process.cwd()}/posts`;\n  const files = fs.readdirSync(path, \"utf-8\");\n\n  const markdownFileNames = files\n    .filter((fn) => fn.endsWith(\".md\"))\n    .map((fn) => fn.replace(\".md\", \"\"));\n\n  return {\n    paths: markdownFileNames.map((fileName) => {\n      return {\n        params: {\n          slug: fileName,\n        },\n      };\n    }),\n    fallback: false,\n  };\n}\n\nexport default BlogPostPage;\n"]},"metadata":{},"sourceType":"module"}