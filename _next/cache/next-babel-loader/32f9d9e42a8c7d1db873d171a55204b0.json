{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/Users/dgroechel/Desktop/nextjs/components/SubscribeForm.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport { Formik, Form, Field } from \"formik\";\nimport { TextField } from \"formik-material-ui\";\nimport { Button, Grid, Typography } from \"@material-ui/core\";\nimport axios from \"axios\";\nexport default function SubscribeForm() {\n  _s();\n\n  var _this = this;\n\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      submitState = _React$useState2[0],\n      setSubmit = _React$useState2[1];\n\n  function submit(_x) {\n    return _submit.apply(this, arguments);\n  }\n\n  function _submit() {\n    _submit = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(values) {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              try {\n                axios.post(\"https://8120hwmwch.execute-api.us-east-1.amazonaws.com/subscribe\", values);\n                setSubmit(true);\n              } catch (e) {\n                alert(e);\n              }\n\n            case 1:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n    return _submit.apply(this, arguments);\n  }\n\n  return __jsx(\"div\", {\n    style: {\n      padding: 30\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 5\n    }\n  }, submitState ? __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 22\n    }\n  }, __jsx(Typography, {\n    variant: \"h3\",\n    align: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }\n  }, \"Thanks For Subscribing!\")) : __jsx(Grid, {\n    container: true,\n    spacing: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }\n  }, __jsx(Grid, {\n    item: true,\n    md: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  }, __jsx(Typography, {\n    variant: \"h5\",\n    style: {\n      color: \"#00701a\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 11\n    }\n  }, \"Subscribe for the latest posts.\")), __jsx(Grid, {\n    item: true,\n    md: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  }, __jsx(Typography, {\n    variant: \"subtitle1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 11\n    }\n  }, \"No Spam. Unsubscribe at anytime.\")), __jsx(Grid, {\n    item: true,\n    md: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  }, __jsx(Formik, {\n    initialValues: {\n      firstName: \"\",\n      email: \"\"\n    },\n    onSubmit: function onSubmit(values, _ref) {\n      var setSubmitting = _ref.setSubmitting;\n      setTimeout(function () {\n        submit(values);\n        setSubmitting(false);\n      }, 500);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 11\n    }\n  }, function (_ref2) {\n    var submitForm = _ref2.submitForm,\n        isSubmitting = _ref2.isSubmitting;\n    return __jsx(Form, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 15\n      }\n    }, __jsx(Grid, {\n      container: true,\n      spacing: 3,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }\n    }, __jsx(Grid, {\n      item: true,\n      md: 5,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 19\n      }\n    }, __jsx(Field, {\n      component: TextField,\n      name: \"firstName\",\n      label: \"First Name\",\n      type: \"text\",\n      fullWidth: true,\n      variant: \"outlined\",\n      inputProps: {\n        \"aria-label\": \"first name\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 21\n      }\n    })), __jsx(Grid, {\n      item: true,\n      md: 5,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 19\n      }\n    }, __jsx(Field, {\n      component: TextField,\n      name: \"email\",\n      label: \"Email\",\n      type: \"email\",\n      fullWidth: true,\n      variant: \"outlined\",\n      inputProps: {\n        \"aria-label\": \"email\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 21\n      }\n    })), __jsx(Grid, {\n      item: true,\n      md: 2,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 19\n      }\n    }, __jsx(Button, {\n      type: \"submit\",\n      size: \"large\",\n      variant: \"contained\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 21\n      }\n    }, \"Submit\"))));\n  }))));\n}\n\n_s(SubscribeForm, \"TWxA/NkTZRoIshtRjYwmXGvoeiE=\");\n\n_c = SubscribeForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"SubscribeForm\");","map":{"version":3,"sources":["/Users/dgroechel/Desktop/nextjs/components/SubscribeForm.js"],"names":["React","Formik","Form","Field","TextField","Button","Grid","Typography","axios","SubscribeForm","useState","submitState","setSubmit","submit","values","post","e","alert","padding","color","firstName","email","setSubmitting","setTimeout","submitForm","isSubmitting"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Formik, Form, Field } from \"formik\";\nimport { TextField } from \"formik-material-ui\";\nimport { Button, Grid, Typography } from \"@material-ui/core\";\nimport axios from \"axios\";\n\nexport default function SubscribeForm() {\n\n  const [submitState, setSubmit] = React.useState(false)\n\n  async function submit(values) {\n    try {\n      axios.post(\n        \"https://8120hwmwch.execute-api.us-east-1.amazonaws.com/subscribe\",\n        values\n      )\n      setSubmit(true)\n    } catch(e){\n      alert(e)\n    }\n  }\n  return (\n    <div style={{ padding: 30 }}>\n      {submitState ? <div>\n        <Typography variant=\"h3\" align=\"center\">\n          Thanks For Subscribing!\n        </Typography>\n      </div> :\n      <Grid container spacing={1}>\n        <Grid item md={12}>\n          <Typography variant=\"h5\" style={{ color: \"#00701a\" }}>\n            Subscribe for the latest posts.\n          </Typography>\n        </Grid>\n        <Grid item md={12}>\n          <Typography variant=\"subtitle1\">\n            No Spam. Unsubscribe at anytime.\n          </Typography>\n        </Grid>\n        <Grid item md={12}>\n          <Formik\n            initialValues={{\n              firstName: \"\",\n              email: \"\",\n            }}\n            onSubmit={(values, { setSubmitting }) => {\n              setTimeout(() => {\n               submit(values)\n                \n                setSubmitting(false);\n              }, 500);\n            }}\n          >\n            {({ submitForm, isSubmitting }) => (\n              <Form>\n                <Grid container spacing={3}>\n                  <Grid item md={5}>\n                    <Field\n                      component={TextField}\n                      name=\"firstName\"\n                      label=\"First Name\"\n                      type=\"text\"\n                      fullWidth\n                      variant=\"outlined\"\n                      inputProps={{ \"aria-label\": \"first name\" }}\n                    />\n                  </Grid>\n                  <Grid item md={5}>\n                    <Field\n                      component={TextField}\n                      name=\"email\"\n                      label=\"Email\"\n                      type=\"email\"\n                      fullWidth\n                      variant=\"outlined\"\n                      inputProps={{ \"aria-label\": \"email\" }}\n                    />\n                  </Grid>\n                  <Grid item md={2}>\n                    <Button type=\"submit\" size=\"large\" variant=\"contained\">\n                      Submit\n                    </Button>\n                  </Grid>\n                </Grid>\n              </Form>\n            )}\n          </Formik>\n        </Grid>\n      </Grid>\n      }\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}